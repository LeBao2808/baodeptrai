package com.mycompany.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class MaterialReceiptAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMaterialReceiptAllPropertiesEquals(MaterialReceipt expected, MaterialReceipt actual) {
        assertMaterialReceiptAutoGeneratedPropertiesEquals(expected, actual);
        assertMaterialReceiptAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMaterialReceiptAllUpdatablePropertiesEquals(MaterialReceipt expected, MaterialReceipt actual) {
        assertMaterialReceiptUpdatableFieldsEquals(expected, actual);
        assertMaterialReceiptUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMaterialReceiptAutoGeneratedPropertiesEquals(MaterialReceipt expected, MaterialReceipt actual) {
        assertThat(expected)
            .as("Verify MaterialReceipt auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMaterialReceiptUpdatableFieldsEquals(MaterialReceipt expected, MaterialReceipt actual) {
        assertThat(expected)
            .as("Verify MaterialReceipt relevant properties")
            .satisfies(e -> assertThat(e.getCreationDate()).as("check creationDate").isEqualTo(actual.getCreationDate()))
            .satisfies(e -> assertThat(e.getPaymentDate()).as("check paymentDate").isEqualTo(actual.getPaymentDate()))
            .satisfies(e -> assertThat(e.getReceiptDate()).as("check receiptDate").isEqualTo(actual.getReceiptDate()))
            .satisfies(e -> assertThat(e.getStatus()).as("check status").isEqualTo(actual.getStatus()))
            .satisfies(e -> assertThat(e.getCode()).as("check code").isEqualTo(actual.getCode()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMaterialReceiptUpdatableRelationshipsEquals(MaterialReceipt expected, MaterialReceipt actual) {
        assertThat(expected)
            .as("Verify MaterialReceipt relationships")
            .satisfies(
                e -> assertThat(e.getQuantificationOrder()).as("check quantificationOrder").isEqualTo(actual.getQuantificationOrder())
            );
    }
}
