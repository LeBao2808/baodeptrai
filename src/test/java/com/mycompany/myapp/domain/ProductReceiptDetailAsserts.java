package com.mycompany.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ProductReceiptDetailAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProductReceiptDetailAllPropertiesEquals(ProductReceiptDetail expected, ProductReceiptDetail actual) {
        assertProductReceiptDetailAutoGeneratedPropertiesEquals(expected, actual);
        assertProductReceiptDetailAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProductReceiptDetailAllUpdatablePropertiesEquals(ProductReceiptDetail expected, ProductReceiptDetail actual) {
        assertProductReceiptDetailUpdatableFieldsEquals(expected, actual);
        assertProductReceiptDetailUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProductReceiptDetailAutoGeneratedPropertiesEquals(ProductReceiptDetail expected, ProductReceiptDetail actual) {
        assertThat(expected)
            .as("Verify ProductReceiptDetail auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProductReceiptDetailUpdatableFieldsEquals(ProductReceiptDetail expected, ProductReceiptDetail actual) {
        assertThat(expected)
            .as("Verify ProductReceiptDetail relevant properties")
            .satisfies(e -> assertThat(e.getNote()).as("check note").isEqualTo(actual.getNote()))
            .satisfies(e -> assertThat(e.getQuantity()).as("check quantity").isEqualTo(actual.getQuantity()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProductReceiptDetailUpdatableRelationshipsEquals(ProductReceiptDetail expected, ProductReceiptDetail actual) {
        assertThat(expected)
            .as("Verify ProductReceiptDetail relationships")
            .satisfies(e -> assertThat(e.getProduct()).as("check product").isEqualTo(actual.getProduct()))
            .satisfies(e -> assertThat(e.getReceipt()).as("check receipt").isEqualTo(actual.getReceipt()));
    }
}
