package com.mycompany.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class MaterialAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMaterialAllPropertiesEquals(Material expected, Material actual) {
        assertMaterialAutoGeneratedPropertiesEquals(expected, actual);
        assertMaterialAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMaterialAllUpdatablePropertiesEquals(Material expected, Material actual) {
        assertMaterialUpdatableFieldsEquals(expected, actual);
        assertMaterialUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMaterialAutoGeneratedPropertiesEquals(Material expected, Material actual) {
        assertThat(expected)
            .as("Verify Material auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMaterialUpdatableFieldsEquals(Material expected, Material actual) {
        assertThat(expected)
            .as("Verify Material relevant properties")
            .satisfies(e -> assertThat(e.getName()).as("check name").isEqualTo(actual.getName()))
            .satisfies(e -> assertThat(e.getUnit()).as("check unit").isEqualTo(actual.getUnit()))
            .satisfies(e -> assertThat(e.getCode()).as("check code").isEqualTo(actual.getCode()))
            .satisfies(e -> assertThat(e.getDescription()).as("check description").isEqualTo(actual.getDescription()))
            .satisfies(e -> assertThat(e.getImgUrl()).as("check imgUrl").isEqualTo(actual.getImgUrl()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMaterialUpdatableRelationshipsEquals(Material expected, Material actual) {}
}
